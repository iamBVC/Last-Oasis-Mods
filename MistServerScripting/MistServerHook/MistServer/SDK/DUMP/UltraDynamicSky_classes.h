// BlueprintGeneratedClass UltraDynamicSky.UltraDynamicSky_C
// Size: 0x9f8 (Inherited: 0x3e8)
struct AUltraDynamicSky_C : AMistDynamicSky {
	struct FPointerToUberGraphFrame UberGraphFrame; // 0x3e8(0x08)
	struct UStaticMeshComponent* MoonMoon; // 0x3f0(0x08)
	struct UStaticMeshComponent* moon_plane; // 0x3f8(0x08)
	struct UArrowComponent* Arrow; // 0x400(0x08)
	struct UArrowComponent* Sun_Root; // 0x408(0x08)
	struct UStaticMeshComponent* Ultra_Dynamic_Sky_Sphere; // 0x410(0x08)
	struct USceneComponent* DefaultSceneRoot; // 0x418(0x08)
	struct ADirectionalLight* Direction Light (Sun); // 0x420(0x08)
	struct UMaterialInstanceDynamic* UDM_mat; // 0x428(0x08)
	bool Refresh Settings; // 0x430(0x01)
	char pad_431[0x3]; // 0x431(0x03)
	float Cloud Speed; // 0x434(0x04)
	float Cloud Density; // 0x438(0x04)
	float Cloud Wisps Opacity; // 0x43c(0x04)
	struct TArray<struct UCurveLinearColor*> Horizon Base Color Curve; // 0x440(0x10)
	struct TArray<struct UCurveLinearColor*> Zenith Base Color Curve; // 0x450(0x10)
	struct TArray<struct UCurveLinearColor*> Cloud Light Color Curve; // 0x460(0x10)
	struct TArray<struct UCurveLinearColor*> Cloud Dark Color Curve; // 0x470(0x10)
	float Time of Day; // 0x480(0x04)
	char pad_484[0x4]; // 0x484(0x04)
	struct TArray<struct UCurveLinearColor*> Sun Color Curve; // 0x488(0x10)
	struct UCurveFloat* Shine Intensity Curve; // 0x498(0x08)
	float Saturation; // 0x4a0(0x04)
	char pad_4A4[0x4]; // 0x4a4(0x04)
	struct UCurveLinearColor* Sun Cloudy Color Curve; // 0x4a8(0x08)
	struct AExponentialHeightFog* Exponential Height Fog; // 0x4b0(0x08)
	struct UCurveFloat* Stars Intensity Curve; // 0x4b8(0x08)
	float Cloud Phase; // 0x4c0(0x04)
	float Moon Scale; // 0x4c4(0x04)
	float Moon Inclination; // 0x4c8(0x04)
	float Moon Phase; // 0x4cc(0x04)
	bool Automatically Set Advanced Settings using Time of Day; // 0x4d0(0x01)
	char pad_4D1[0x3]; // 0x4d1(0x03)
	float Stars Visibility; // 0x4d4(0x04)
	float Moon Intensity; // 0x4d8(0x04)
	float Moon Position; // 0x4dc(0x04)
	float Sun Angle; // 0x4e0(0x04)
	struct FLinearColor Horizon Base Color; // 0x4e4(0x10)
	struct FLinearColor Zenith Base Color; // 0x4f4(0x10)
	struct FLinearColor Cloud Light Color; // 0x504(0x10)
	struct FLinearColor Cloud Dark Color; // 0x514(0x10)
	struct FLinearColor Sun Color; // 0x524(0x10)
	float Cloud Shine Intensity; // 0x534(0x04)
	struct FLinearColor Sun Light Color; // 0x538(0x10)
	float Day Length; // 0x548(0x04)
	char pad_54C[0x4]; // 0x54c(0x04)
	struct UCurveFloat* Moon Position Curve; // 0x550(0x08)
	bool Night Cycle; // 0x558(0x01)
	bool Simulate Cloud Density Changes; // 0x559(0x01)
	char pad_55A[0x2]; // 0x55a(0x02)
	float Cloud Density Shift Frequency (min); // 0x55c(0x04)
	float Cloud Density Shift Frequency (max); // 0x560(0x04)
	float Cloud Density_target; // 0x564(0x04)
	float Cloud Density Change (Smoothing); // 0x568(0x04)
	float Cloud Opacity; // 0x56c(0x04)
	float Overall Intensity; // 0x570(0x04)
	float Sun Brightness; // 0x574(0x04)
	struct FLinearColor Moon Color; // 0x578(0x10)
	float Shine Variation; // 0x588(0x04)
	float Sun Lighting Intensity; // 0x58c(0x04)
	struct UCurveFloat* Sun Highlight Radius_curve; // 0x590(0x08)
	float Sun Highlight Radius; // 0x598(0x04)
	bool First Day; // 0x59c(0x01)
	bool Simulate Moon Phase Changes; // 0x59d(0x01)
	char pad_59E[0x2]; // 0x59e(0x02)
	float Stars_Intensity; // 0x5a0(0x04)
	struct FLinearColor Stars_Color; // 0x5a4(0x10)
	float Moon Orbit Offset; // 0x5b4(0x04)
	struct FRotator Sun Rotation; // 0x5b8(0x0c)
	float Sun Radius; // 0x5c4(0x04)
	struct UMaterialInstanceDynamic* Cloud Shadows MID; // 0x5c8(0x08)
	bool Use Cloud Shadows; // 0x5d0(0x01)
	char pad_5D1[0x3]; // 0x5d1(0x03)
	float Cloud Shadows Scale; // 0x5d4(0x04)
	float Cloud Shadows Intensity; // 0x5d8(0x04)
	char pad_5DC[0x4]; // 0x5dc(0x04)
	struct ADirectionalLight* Moon Light; // 0x5e0(0x08)
	bool Manually Select Sun Color; // 0x5e8(0x01)
	bool Automatically Set Moon Light Rotation; // 0x5e9(0x01)
	bool Automatically Set Sun Light Rotation; // 0x5ea(0x01)
	char pad_5EB[0x1]; // 0x5eb(0x01)
	float Moonlight Intensity; // 0x5ec(0x04)
	float Stars Speed; // 0x5f0(0x04)
	float Sun Inclination; // 0x5f4(0x04)
	float Sun Yaw; // 0x5f8(0x04)
	float Moon Rotation; // 0x5fc(0x04)
	struct UTexture2D* Custom Moon Texture; // 0x600(0x08)
	bool Use Custom Moon Texture; // 0x608(0x01)
	char pad_609[0x7]; // 0x609(0x07)
	struct ASkyLight* SkyLight; // 0x610(0x08)
	bool Recapture Sky light periodically; // 0x618(0x01)
	char pad_619[0x3]; // 0x619(0x03)
	float Sky Light recapture period; // 0x61c(0x04)
	struct UCurveFloat* Night Filter Curve; // 0x620(0x08)
	float Night brightness; // 0x628(0x04)
	float Moon Glow Intensity; // 0x62c(0x04)
	struct UCurveFloat* Directional_Intensity_Curve; // 0x630(0x08)
	float Sun_Light_Intensity; // 0x638(0x04)
	float Aurora Intensity; // 0x63c(0x04)
	float Aurora Speed; // 0x640(0x04)
	bool Use Fast Skylight; // 0x644(0x01)
	bool Use Auroras; // 0x645(0x01)
	char pad_646[0x2]; // 0x646(0x02)
	struct UTexture* Clouds Base Texture; // 0x648(0x08)
	float Cloud Tiling; // 0x650(0x04)
	float Cloud Direction; // 0x654(0x04)
	bool One cloud layer; // 0x658(0x01)
	char pad_659[0x3]; // 0x659(0x03)
	float Cloud Height 1; // 0x65c(0x04)
	float Cloud Height 2; // 0x660(0x04)
	int32_t color_scheme; // 0x664(0x04)
	struct UMaterialInstanceDynamic* Moon mat; // 0x668(0x08)
	float Moon Angle; // 0x670(0x04)
	float Sun_Volumetric_Scattering_Intensity; // 0x674(0x04)
	float Moon_Volumetric_Scattering_Intensity; // 0x678(0x04)
	float Increase; // 0x67c(0x04)
	bool Runtime; // 0x680(0x01)
	char pad_681[0x3]; // 0x681(0x03)
	float TimeRuntime; // 0x684(0x04)
	struct FRotator EclipseMoonRotation; // 0x688(0x0c)
	float EclipseProgress; // 0x694(0x04)
	float EclipseMoonImageRoll; // 0x698(0x04)
	struct FRotator EclipseMoonRotationOffset; // 0x69c(0x0c)
	struct FSceneData LastSceneData; // 0x6a8(0x350)

	void RemoveLightFunctionFromCharacterLight(); // Function UltraDynamicSky.UltraDynamicSky_C.RemoveLightFunctionFromCharacterLight // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x163f1c0
	void GetValidLight(struct ADirectionalLight*& Array Element); // Function UltraDynamicSky.UltraDynamicSky_C.GetValidLight // (Private|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x163f1c0
	void SetActors(); // Function UltraDynamicSky.UltraDynamicSky_C.SetActors // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x163f1c0
	void Set Material Variables(); // Function UltraDynamicSky.UltraDynamicSky_C.Set Material Variables // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x163f1c0
	void Set Solar Angle(); // Function UltraDynamicSky.UltraDynamicSky_C.Set Solar Angle // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x163f1c0
	void UserConstructionScript(); // Function UltraDynamicSky.UltraDynamicSky_C.UserConstructionScript // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x163f1c0
	void ReceiveBeginPlay(); // Function UltraDynamicSky.UltraDynamicSky_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // @ game+0x163f1c0
	void ConstructEvent(); // Function UltraDynamicSky.UltraDynamicSky_C.ConstructEvent // (BlueprintCallable|BlueprintEvent) // @ game+0x163f1c0
	void ReceiveTick(float DeltaSeconds); // Function UltraDynamicSky.UltraDynamicSky_C.ReceiveTick // (Event|Public|BlueprintEvent) // @ game+0x163f1c0
	void ReceiveSkyDataUpdate(struct FSceneData& SceneData); // Function UltraDynamicSky.UltraDynamicSky_C.ReceiveSkyDataUpdate // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x163f1c0
	void UpdateEclipseBp(struct FRotator MoonRotation, float MoonEclipseProgress); // Function UltraDynamicSky.UltraDynamicSky_C.UpdateEclipseBp // (Event|Public|BlueprintEvent) // @ game+0x163f1c0
	void ExecuteUbergraph_UltraDynamicSky(int32_t EntryPoint); // Function UltraDynamicSky.UltraDynamicSky_C.ExecuteUbergraph_UltraDynamicSky // (Final|UbergraphFunction|HasDefaults) // @ game+0x163f1c0
};

